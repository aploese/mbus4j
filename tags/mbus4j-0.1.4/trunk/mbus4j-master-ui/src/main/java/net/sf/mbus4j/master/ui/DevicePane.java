/*
 * mbus4j - Drivers for the M-Bus protocol - http://mbus4j.sourceforge.net/
 * Copyright (C) 2010, mbus4j.sf.net, and individual contributors as indicated
 * by the @authors tag. See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 3 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *
 *
 * @author Arne Pl√∂se
 *
 */
package net.sf.mbus4j.master.ui;

import net.sf.mbus4j.dataframes.MBusMedium;
import net.sf.mbus4j.dataframes.ResponseFrameContainer;
import net.sf.mbus4j.dataframes.UserDataResponse.StatusCode;
import net.sf.mbus4j.devices.GenericDevice;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFormattedTextField.AbstractFormatterFactory;
import javax.swing.JTabbedPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author aploese
 */
public class DevicePane
        extends JTabbedPane {

    /** Creates new form BeanForm */
    public DevicePane() {
        initComponents();
        mediumComboBox.removeAllItems();

        for (MBusMedium medium : MBusMedium.values()) {
            mediumComboBox.addItem(medium);
        }

        statusAddComboBox.removeAllItems();

        for (StatusCode sc : StatusCode.values()) {
            statusAddComboBox.addItem(sc);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deviceDataPanel = new javax.swing.JPanel();
        manufacturerTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mediumComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        statusCodesList = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        identNumberTextField = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dfcCheckBox = new javax.swing.JCheckBox();
        acdCheckBox = new javax.swing.JCheckBox();
        versionTextField = new javax.swing.JFormattedTextField();
        addressTextField = new javax.swing.JFormattedTextField();
        signatureTextField = new javax.swing.JFormattedTextField();
        networkSelectedCheckBox = new javax.swing.JCheckBox();
        statusAddComboBox = new javax.swing.JComboBox();
        accessNumberTextField = new javax.swing.JTextField();

        setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        deviceDataPanel.setName("deviceDataPanel"); // NOI18N

        manufacturerTextField.setName("manufacturerTextField"); // NOI18N

        jLabel3.setText("Version:");
        jLabel3.setName("jLabel3"); // NOI18N

        mediumComboBox.setName("mediumComboBox"); // NOI18N

        jLabel2.setText("Medium:");
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        statusCodesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        statusCodesList.setName("statusCodesList"); // NOI18N
        jScrollPane2.setViewportView(statusCodesList);

        jLabel7.setText("AccessNumber:");
        jLabel7.setName("jLabel7"); // NOI18N

        identNumberTextField.setFormatterFactory(createIdentnumberFortmatterFactory());
        identNumberTextField.setName("identNumberTextField"); // NOI18N

        jLabel6.setText("Status:");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel1.setText("Manufacturer:");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel4.setText("Identnumber:");
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel8.setText("Signature:");
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel5.setText("Address:");
        jLabel5.setName("jLabel5"); // NOI18N

        dfcCheckBox.setText("Dfc");
        dfcCheckBox.setName("dfcCheckBox"); // NOI18N

        acdCheckBox.setText("Acd");
        acdCheckBox.setName("acdCheckBox"); // NOI18N

        versionTextField.setFormatterFactory(createHexFormmatter(2));
        versionTextField.setName("versionTextField"); // NOI18N

        addressTextField.setFormatterFactory(createHexFormmatter(2));
        addressTextField.setName("addressTextField"); // NOI18N

        signatureTextField.setFormatterFactory(createHexFormmatter(4));
        signatureTextField.setName("signatureTextField"); // NOI18N

        networkSelectedCheckBox.setText("Network selected");
        networkSelectedCheckBox.setName("networkSelectedCheckBox"); // NOI18N

        statusAddComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        statusAddComboBox.setName("statusAddComboBox"); // NOI18N

        accessNumberTextField.setName("accessNumberTextField"); // NOI18N

        javax.swing.GroupLayout deviceDataPanelLayout = new javax.swing.GroupLayout(deviceDataPanel);
        deviceDataPanel.setLayout(deviceDataPanelLayout);
        deviceDataPanelLayout.setHorizontalGroup(
            deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deviceDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deviceDataPanelLayout.createSequentialGroup()
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(statusAddComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(versionTextField)
                            .addComponent(identNumberTextField)
                            .addComponent(manufacturerTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(mediumComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(deviceDataPanelLayout.createSequentialGroup()
                                .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(accessNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                    .addComponent(addressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                    .addComponent(signatureTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)))
                            .addGroup(deviceDataPanelLayout.createSequentialGroup()
                                .addComponent(acdCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dfcCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(networkSelectedCheckBox)
                                .addGap(21, 21, 21)))
                        .addGap(110, 110, 110))
                    .addGroup(deviceDataPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(548, Short.MAX_VALUE))))
        );
        deviceDataPanelLayout.setVerticalGroup(
            deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deviceDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(deviceDataPanelLayout.createSequentialGroup()
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(manufacturerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(19, 19, 19)
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(mediumComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(deviceDataPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(1, 1, 1))
                            .addComponent(versionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(identNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(deviceDataPanelLayout.createSequentialGroup()
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(accessNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(signatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acdCheckBox)
                            .addComponent(dfcCheckBox)
                            .addComponent(networkSelectedCheckBox))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(deviceDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusAddComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        addTab("Device Data", deviceDataPanel);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accessNumberTextField;
    private javax.swing.JCheckBox acdCheckBox;
    private javax.swing.JFormattedTextField addressTextField;
    private javax.swing.JPanel deviceDataPanel;
    private javax.swing.JCheckBox dfcCheckBox;
    private javax.swing.JFormattedTextField identNumberTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField manufacturerTextField;
    private javax.swing.JComboBox mediumComboBox;
    private javax.swing.JCheckBox networkSelectedCheckBox;
    private javax.swing.JFormattedTextField signatureTextField;
    private javax.swing.JComboBox statusAddComboBox;
    private javax.swing.JList statusCodesList;
    private javax.swing.JFormattedTextField versionTextField;
    // End of variables declaration//GEN-END:variables
    private GenericDevice device;
    private List<ResponseFramePanel> rfps = new ArrayList<ResponseFramePanel>();

    private AbstractFormatterFactory createIdentnumberFortmatterFactory() {
        MaskFormatter result;

        try {
            result = new MaskFormatter("########");
            result.setPlaceholderCharacter('0');

            return new javax.swing.text.DefaultFormatterFactory(result);
        } catch (ParseException ex) {
            throw new RuntimeException(ex);
        }
    }

    private AbstractFormatterFactory createHexFormmatter(int digits) {
        StringBuilder sb = new StringBuilder("0x");

        for (int i = 0; i < digits; i++) {
            sb.append("H");
        }

        MaskFormatter result;

        try {
            result = new MaskFormatter(sb.toString());
            result.setPlaceholderCharacter('0');

            return new javax.swing.text.DefaultFormatterFactory(result);
        } catch (ParseException ex) {
            throw new RuntimeException(ex);
        }
    }

    /**
     * @return the device
     */
    public GenericDevice getDevice() {
        return device;
    }

    /**
     * @param device the device to set
     */
    public void setDevice(GenericDevice device) {
        this.device = device;
        refreshDeviceData();
    }

    private void refreshDeviceData() {
        manufacturerTextField.setText(device.getManufacturer());
        mediumComboBox.setSelectedItem(device.getMedium());
        versionTextField.setText(String.format("0x%02x",
                device.getVersion()));
        identNumberTextField.setText(String.format("%08d",
                device.getIdentNumber()));
        addressTextField.setText(String.format("0x%02x",
                device.getAddress()));
        accessNumberTextField.setText(Integer.toString(device.getAccessnumber()));
        signatureTextField.setText(String.format("0x%04x",
                device.getSignature()));
        acdCheckBox.setSelected(device.isAcd());
        dfcCheckBox.setSelected(device.isDfc());



//TODO        networkSelectedCheckBox.setSelected( device.isNetworkSelected(  ) );
        //TODO
        device.getStatus();

        //Frames
        while (this.getTabCount() > 1) {
            this.removeTabAt(1);
        }

        rfps.clear();

        for (ResponseFrameContainer rfc : device.getResponseFrameContainers()) {
            ResponseFramePanel rfp = new ResponseFramePanel();
            rfp.setResponseFrameContainer(rfc);
            rfps.add(rfp);
            addTab(rfc.getName(), rfp);
        }
    }

    void commitChanges() {
        device.setManufacturer(manufacturerTextField.getText());
        device.setMedium((MBusMedium) mediumComboBox.getSelectedItem());
        device.setVersion((byte) Integer.parseInt(versionTextField.getText().substring(2),
                16));
        device.setIdentNumber(Integer.parseInt(identNumberTextField.getText()));
        device.setAddress((byte) Integer.parseInt(addressTextField.getText().substring(2),
                16));
        device.setAccessnumber(Short.parseShort(accessNumberTextField.getText()));
        device.setSignature((short) Integer.parseInt(signatureTextField.getText().substring(2),
                16));
        device.setAcd(acdCheckBox.isSelected());
        device.setDfc(dfcCheckBox.isSelected());
//TODO        device.setNetworkSelected( networkSelectedCheckBox.isSelected(  ) );

        device.getStatus();

        for (int i = 0; i < rfps.size(); i++) {
            rfps.get(i).commitChanges();
            setTitleAt(i + 1,
                    rfps.get(i).getFrameName());
        }
    }
}
