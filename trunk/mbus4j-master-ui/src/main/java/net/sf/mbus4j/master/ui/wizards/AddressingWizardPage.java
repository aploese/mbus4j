/*
 * mbus4j - Drivers for the M-Bus protocol - http://mbus4j.sourceforge.net/
 * Copyright (C) 2010, mbus4j.sf.net, and individual contributors as indicated
 * by the @authors tag. See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 3 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *
 *
 * @author Arne Pl√∂se
 *
 */
package net.sf.mbus4j.master.ui.wizards;

import java.awt.Component;
import net.sf.mbus4j.MBusAddressing;
import org.netbeans.spi.wizard.Wizard;
import org.netbeans.spi.wizard.WizardPage;

/**
 *
 * @author  aploese
 */
public class AddressingWizardPage extends WizardPage {

    public MBusAddressing getAddressing() {
        if (primaryButton.isSelected()) {
            return MBusAddressing.PRIMARY;
        } else {
            return MBusAddressing.SECONDARY;
        }
    }
    
    /** Creates new form BeanForm */
    public AddressingWizardPage() {
        initComponents();
    }

    public static String getStep() {
        return "ChooseAddressingType";
    }

    public static String getDescription() {
        return "Choose the addressing, wich will be used for searching";
    }

    @Override
    protected String validateContents(Component component, Object event) {
        setForwardNavigationMode(Wizard.MODE_CAN_CONTINUE_OR_FINISH);
        return null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        remoteSystemLabel = new javax.swing.JLabel();
        remoteSystemNameLabel = new javax.swing.JLabel();
        remoteSystemShortNameLabel = new javax.swing.JLabel();
        primaryButton = new javax.swing.JRadioButton();
        secondaryButton = new javax.swing.JRadioButton();
        serialPortLabel = new javax.swing.JLabel();
        serialPortComboBox = new javax.swing.JComboBox();
        bitrateLabel = new javax.swing.JLabel();
        bitrateComboBox = new javax.swing.JComboBox();
        phonenumberLabel = new javax.swing.JLabel();
        phonenumberTextField = new javax.swing.JTextField();

        setName("Form"); // NOI18N

        remoteSystemLabel.setName("remoteSystemLabel"); // NOI18N

        remoteSystemNameLabel.setName("remoteSystemNameLabel"); // NOI18N

        remoteSystemShortNameLabel.setName("remoteSystemShortNameLabel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(AddressingWizardPage.class);
        primaryButton.setText(resourceMap.getString("primaryButton.text")); // NOI18N
        primaryButton.setName("primaryButton"); // NOI18N

        secondaryButton.setText(resourceMap.getString("secondaryButton.text")); // NOI18N
        secondaryButton.setName("secondaryButton"); // NOI18N

        serialPortLabel.setText(resourceMap.getString("serialPortLabel.text")); // NOI18N
        serialPortLabel.setName("serialPortLabel"); // NOI18N

        serialPortComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        serialPortComboBox.setName("serialPortComboBox"); // NOI18N

        bitrateLabel.setText(resourceMap.getString("bitrateLabel.text")); // NOI18N
        bitrateLabel.setName("bitrateLabel"); // NOI18N

        bitrateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bitrateComboBox.setName("bitrateComboBox"); // NOI18N

        phonenumberLabel.setText(resourceMap.getString("phonenumberLabel.text")); // NOI18N
        phonenumberLabel.setName("phonenumberLabel"); // NOI18N

        phonenumberTextField.setText(resourceMap.getString("phonenumberTextField.text")); // NOI18N
        phonenumberTextField.setName("phonenumberTextField"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remoteSystemShortNameLabel)
                            .addComponent(remoteSystemNameLabel)
                            .addComponent(remoteSystemLabel)
                            .addComponent(primaryButton)
                            .addComponent(serialPortLabel)
                            .addComponent(bitrateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bitrateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serialPortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phonenumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(296, 296, 296))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(phonenumberLabel)
                        .addContainerGap(459, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(secondaryButton, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                        .addGap(404, 404, 404))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialPortLabel)
                            .addComponent(serialPortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(remoteSystemLabel)
                        .addGap(18, 18, 18)
                        .addComponent(remoteSystemNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bitrateLabel)
                                .addComponent(bitrateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(remoteSystemShortNameLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phonenumberLabel)
                    .addComponent(phonenumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(primaryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(secondaryButton)
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bitrateComboBox;
    private javax.swing.JLabel bitrateLabel;
    private javax.swing.JLabel phonenumberLabel;
    private javax.swing.JTextField phonenumberTextField;
    private javax.swing.JRadioButton primaryButton;
    private javax.swing.JLabel remoteSystemLabel;
    private javax.swing.JLabel remoteSystemNameLabel;
    private javax.swing.JLabel remoteSystemShortNameLabel;
    private javax.swing.JRadioButton secondaryButton;
    private javax.swing.JComboBox serialPortComboBox;
    private javax.swing.JLabel serialPortLabel;
    // End of variables declaration//GEN-END:variables
}
